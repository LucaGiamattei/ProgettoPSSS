-- MySQL Script generated by MySQL Workbench
-- Wed Sep 23 18:42:06 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema PSSSdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema PSSSdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PSSSdb` DEFAULT CHARACTER SET utf8 ;
USE `PSSSdb` ;

-- -----------------------------------------------------
-- Table `PSSSdb`.`Utente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`Utente` (
  `idUtente` INT NOT NULL AUTO_INCREMENT,
  `Password` VARCHAR(45) NOT NULL,
  `Nome` VARCHAR(45) NOT NULL,
  `Cognome` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Docente` INT NULL,
  `MediaScoreLezioni` FLOAT NULL,
  `ContoPaypal` VARCHAR(45) NULL,
  `Corriculum` LONGBLOB NULL,
  PRIMARY KEY (`idUtente`),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`Topic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`Topic` (
  `idTopic` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NULL,
  PRIMARY KEY (`idTopic`),
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`SubscriptionUtenteTopic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`SubscriptionUtenteTopic` (
  `idSubscriptionUtenteTopic` INT NOT NULL AUTO_INCREMENT,
  `Utente_idUtente` INT NOT NULL,
  `Topic_idTopic` INT NOT NULL,
  `Data` DATE NULL,
  UNIQUE INDEX `idSubscriptionUtenteTopic_UNIQUE` (`idSubscriptionUtenteTopic` ASC),
  INDEX `fk_SubscriptionUtenteTopic_Utente1_idx` (`Utente_idUtente` ASC),
  INDEX `fk_SubscriptionUtenteTopic_Topic1_idx` (`Topic_idTopic` ASC),
  PRIMARY KEY (`Topic_idTopic`, `Utente_idUtente`),
  CONSTRAINT `fk_SubscriptionUtenteTopic_Utente1`
    FOREIGN KEY (`Utente_idUtente`)
    REFERENCES `PSSSdb`.`Utente` (`idUtente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SubscriptionUtenteTopic_Topic1`
    FOREIGN KEY (`Topic_idTopic`)
    REFERENCES `PSSSdb`.`Topic` (`idTopic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`Lezione`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`Lezione` (
  `idLezione` INT NOT NULL AUTO_INCREMENT,
  `NomeLezione` VARCHAR(45) NOT NULL,
  `MediaScoreLezione` FLOAT NULL,
  `NMaxStudenti` INT NULL,
  `Topic_idTopic` INT NOT NULL,
  INDEX `fk_Lezione_Topic1_idx` (`Topic_idTopic` ASC),
  UNIQUE INDEX `idLezione_UNIQUE` (`idLezione` ASC),
  PRIMARY KEY (`idLezione`),
  CONSTRAINT `fk_Lezione_Topic1`
    FOREIGN KEY (`Topic_idTopic`)
    REFERENCES `PSSSdb`.`Topic` (`idTopic`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`VideoCall`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`VideoCall` (
  `NomeRoom` VARCHAR(45) NOT NULL,
  `Password` VARCHAR(45) NULL,
  `Lezione_idLezione` INT NOT NULL,
  PRIMARY KEY (`NomeRoom`),
  INDEX `fk_VideoCall_Lezione1_idx` (`Lezione_idLezione` ASC),
  UNIQUE INDEX `Lezione_idLezione_UNIQUE` (`Lezione_idLezione` ASC),
  CONSTRAINT `fk_VideoCall_Lezione1`
    FOREIGN KEY (`Lezione_idLezione`)
    REFERENCES `PSSSdb`.`Lezione` (`idLezione`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`FasciaOraria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`FasciaOraria` (
  `DataLezione` DATE NOT NULL,
  `OrarioLezione` INT NOT NULL,
  `prezzo` FLOAT NOT NULL,
  `Lezione_idLezione` INT NOT NULL,
  `Utente_idUtente` INT NOT NULL,
  PRIMARY KEY (`DataLezione`, `OrarioLezione`, `Utente_idUtente`),
  INDEX `fk_FasciaOraria_Lezione1_idx` (`Lezione_idLezione` ASC),
  INDEX `fk_FasciaOraria_Utente1_idx` (`Utente_idUtente` ASC),
  CONSTRAINT `fk_FasciaOraria_Lezione1`
    FOREIGN KEY (`Lezione_idLezione`)
    REFERENCES `PSSSdb`.`Lezione` (`idLezione`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_FasciaOraria_Utente1`
    FOREIGN KEY (`Utente_idUtente`)
    REFERENCES `PSSSdb`.`Utente` (`idUtente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`Pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`Pagamento` (
  `Utente_idUtente` INT NOT NULL,
  `DataPagamento` TIMESTAMP NULL,
  `idPagamento` INT NULL AUTO_INCREMENT,
  `FasciaOraria_Utente_idUtente` INT NOT NULL,
  `FasciaOraria_DataLezione` DATE NOT NULL,
  `FasciaOraria_OrarioLezione` INT NOT NULL,
  `FasciaOraria_Lezione_Utente_idUtente` INT NOT NULL,
  INDEX `fk_Pagamento_Utente1_idx` (`Utente_idUtente` ASC),
  PRIMARY KEY (`Utente_idUtente`, `FasciaOraria_Utente_idUtente`, `FasciaOraria_DataLezione`, `FasciaOraria_OrarioLezione`, `FasciaOraria_Lezione_Utente_idUtente`),
  UNIQUE INDEX `idPagamento_UNIQUE` (`idPagamento` ASC),
  INDEX `fk_Pagamento_FasciaOraria1_idx` (`FasciaOraria_DataLezione` ASC, `FasciaOraria_OrarioLezione` ASC, `FasciaOraria_Lezione_Utente_idUtente` ASC),
  CONSTRAINT `fk_Pagamento_Utente1`
    FOREIGN KEY (`Utente_idUtente`)
    REFERENCES `PSSSdb`.`Utente` (`idUtente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pagamento_FasciaOraria1`
    FOREIGN KEY (`FasciaOraria_DataLezione` , `FasciaOraria_OrarioLezione`)
    REFERENCES `PSSSdb`.`FasciaOraria` (`DataLezione` , `OrarioLezione`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PSSSdb`.`Recensione`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`Recensione` (
  `Lezione_idLezione` INT NOT NULL,
  `Utente_idUtente` INT NOT NULL,
  `idRecensione` INT NULL AUTO_INCREMENT,
  `Valutazione` INT NULL,
  INDEX `fk_Recensione_Lezione1_idx` (`Lezione_idLezione` ASC),
  INDEX `fk_Recensione_Utente1_idx` (`Utente_idUtente` ASC),
  PRIMARY KEY (`Lezione_idLezione`, `Utente_idUtente`),
  UNIQUE INDEX `idRecensione_UNIQUE` (`idRecensione` ASC),
  CONSTRAINT `fk_Recensione_Lezione1`
    FOREIGN KEY (`Lezione_idLezione`)
    REFERENCES `PSSSdb`.`Lezione` (`idLezione`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Recensione_Utente1`
    FOREIGN KEY (`Utente_idUtente`)
    REFERENCES `PSSSdb`.`Utente` (`idUtente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `PSSSdb` ;

-- -----------------------------------------------------
-- Placeholder table for view `PSSSdb`.`LezioniDisponibili`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PSSSdb`.`LezioniDisponibili` (`idLezione` INT, `NomeLezione` INT, `MediaScoreLezione` INT, `NMaxStudenti` INT, `Topic_idTopic` INT, `DataLezione` INT, `OrarioLezione` INT, `prezzo` INT, `Lezione_idLezione` INT, `Utente_idUtente` INT);

-- -----------------------------------------------------
-- View `PSSSdb`.`LezioniDisponibili`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PSSSdb`.`LezioniDisponibili`;
USE `PSSSdb`;
CREATE  OR REPLACE VIEW `LezioniDisponibili` AS
SELECT * FROM Lezione INNER JOIN FasciaOraria ON Lezione.idLezione = FasciaOraria.Lezione_idLezione  WHERE DataLezione >CURDATE() OR ( DataLezione =CURDATE()  &&OrarioLezione>= DATE_FORMAT(CURTIME(), '%H')*2);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
