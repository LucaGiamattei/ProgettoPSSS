#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{listings,xcolor,courier,bookmark}
\usepackage{listingsutf8}
\definecolor{darkblue}{named}{blue}
\definecolor{darkred}{named}{red}
\definecolor{grau}{named}{gray}
\let\Righttorque\relax
\lstset{
captionpos=b,
commentstyle=\color[rgb]{0.133,0.545,0.133},
keywordstyle=\color{darkblue},
stringstyle=\color{darkred},
extendedchars=true,
basicstyle=\small\ttfamily,
showstringspaces=false,
tabsize=2,
numbers=left,
numberstyle=\tiny,
breakautoindent  = true,
breakindent      = 2em,
breaklines       = true,
postbreak        = ,
prebreak         = \raisebox{-.8ex}[0ex][0ex]{\Righttorque},
showspaces=false, 
showtabs=false, 
showstringspaces=false,
language=VHDL,
frame=single,
morecomment=[s]{--}
}


\renewcommand*{\lstlistingname}{Codice Componente}


\usepackage{fancyhdr}
\pagestyle{fancy}

\fancyhead{} 
\fancyfoot{} 

\fancyhead[RO,LE]{\bfseries \leftmark}
\fancyfoot[LE,RO]{\thepage}
\fancyfoot[LO,CE]{Tesina in ASE: Architetture dei Sistemi di Elaborazione}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\date{}
\cfoot{}
\end_preamble
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.5cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Implementazione
\end_layout

\begin_layout Subsection
Application Server
\end_layout

\begin_layout Subsubsection*
Web Layer
\end_layout

\begin_layout Standard
È il livello che espone le funzionalità offerte dal sistema verso il Client.
 In particolare, vi sono implementati:
\end_layout

\begin_layout Itemize
2 Filtri derivati dalla classe 
\family typewriter
Filter
\family default
:
\end_layout

\begin_deeper
\begin_layout Itemize

\family typewriter
AuthFilter
\family default
 filtro per il controllo dell'autenticazione dell'utente all'interno del
 sistema;
\end_layout

\begin_layout Itemize

\family typewriter
DocFilter
\family default
 gestisce l'autirizzazione per le funzioni dedicate al docente.
\end_layout

\end_deeper
\begin_layout Itemize
16 Servlet per identificare le risorse.
 Ogni Servlet è una classe derivata da 
\family typewriter
HttpServlet
\family default
.
 Il flusso di esecuzione di una servlet è incentrato su due componenti fondament
ali: la richiesta (request, inviata dal client verso il server) e la risposta
 (response, inviata dal server verso il client).
 In Java, questi due componenti sono identificati, rispettivamente, dalle
 seguenti interfacce:
\family typewriter
 javax.servlet.http.HttpServletRequest
\family default
 e 
\family typewriter
javax.servlet.http.HttpServletResponse
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/WebLayer.png
	lyxscale 50
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Package Web Layer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Service Layer
\end_layout

\begin_layout Standard
Nel Service Layer troviamo l'implementazione della logica di business.
 Tale package è composto da:
\end_layout

\begin_layout Itemize
Un package per ogni servizio offerto al cui interno troviamo: 
\end_layout

\begin_deeper
\begin_layout Itemize
Un'interfaccia con la definizione dei metodi relativi ai servizi;
\end_layout

\begin_layout Itemize
Un package di implementazione dentro il quale vi è la classe di implementazione
 dei metodi definiti nell'interfaccia relativi a quel servizio.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/ServiceLayer.png
	lyxscale 50
	scale 80

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Package Service Layer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Data Layer
\end_layout

\begin_layout Standard
Il package Data Layer è composto da:
\end_layout

\begin_layout Itemize
Un package che prende il nome dell'entità da implementare al cui interno
 troviamo:
\end_layout

\begin_deeper
\begin_layout Itemize
Il package 
\begin_inset Quotes eld
\end_inset

entities
\begin_inset Quotes erd
\end_inset

 nel quale vi è la classe che funge da contenitore d'informazioni dell'entità;
\end_layout

\begin_layout Itemize
Il package 
\begin_inset Quotes eld
\end_inset

controller
\begin_inset Quotes erd
\end_inset

 nel quale vi è il controller, classe che implementa l'interfaccia che espone
 le funzioni pubbliche sull'entità;
\end_layout

\begin_layout Itemize
L'interfaccia della classe con la definizione dei metodi relativi all'entità,
 i quali possono essere richiamati dal Service Layer.
 È possibile consultare la documentazione di tutte le interfacce, generata
 tramite Javadoc, all'interno della cartella 
\begin_inset Quotes eld
\end_inset

Codice
\backslash
WebAppSmartLearning
\backslash
doc
\begin_inset Quotes erd
\end_inset

.
 Ogni interfaccia segue il seguente standard:
\end_layout

\begin_deeper
\begin_layout Itemize
ogni funzione ritorna sempre uno 
\begin_inset Quotes eld
\end_inset

StateResult
\begin_inset Quotes erd
\end_inset

 che rispecchia lo stato di completamento della funzione;
\end_layout

\begin_layout Itemize
le funzioni utilizzano come contenitori di informazioni solo le entità presenti
 nel relativo package 
\begin_inset Quotes eld
\end_inset

entities
\begin_inset Quotes erd
\end_inset

;
\end_layout

\begin_layout Itemize
\noindent
le informazioni ottenute dall'elaborazioni delle funzioni sono restituiti
 tramite parametri di I/O.
\end_layout

\begin_layout Standard
Nella seguente figura è mostrata come esempio la documentazione Javadoc
 relativa a 
\begin_inset Quotes eld
\end_inset

API_LezioneDB
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/javadoc.png
	lyxscale 20
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Documentazione Javadoc API_LezioneDB
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Itemize
Il package 
\begin_inset Quotes eld
\end_inset

ConnectionManager
\begin_inset Quotes erd
\end_inset

 in cui troviamo la classe che implementa le funzioni per la connessione
 con il database e tutte le funzioni che effettuano le query al database;
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Data Layer.jpg
	lyxscale 50
	scale 66

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Package Data Layer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Utilities
\end_layout

\begin_layout Standard
Nel package 
\begin_inset Quotes eld
\end_inset

utilities
\begin_inset Quotes erd
\end_inset

 si trovano le classi relative ai vari id, che si riferiscono alle varie
 tabelle del database, e una classe 
\family typewriter
enum
\family default
 
\begin_inset Quotes eld
\end_inset

StateResult
\begin_inset Quotes erd
\end_inset

 che rappresenta lo stato di fine elaborazione di una funzione.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/utilities.jpg
	lyxscale 70
	scale 70

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Package Utilities
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Database
\end_layout

\begin_layout Standard
Il Database è di tipo 
\series bold
relazionale
\series default
 ed è rappresentabile attraverso il seguente 
\series bold
modello E-R
\series default
 (entità-relazione):
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Modello_E-R.png
	lyxscale 50
	scale 50

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Modello E-R
\end_layout

\end_inset


\end_layout

\end_inset

Esso, inoltre, è caratterizzato dall'utilizzo di una vista denominata 
\begin_inset Quotes eld
\end_inset

catalogolezione
\begin_inset Quotes erd
\end_inset

, e delle stored procedures.
 In particolare: 
\end_layout

\begin_layout Itemize
"catalogolezione" raggruppa i dati della tabella "lezione" e di "fasciaoraria"
 in modo da poter effettuare i controlli sulla data e sugli orari per il
 retrieve di una fascia oraria di una lezione non scaduta.
 La data di creazione deve essere la data corrente oppure maggiore della
 data corrente, l'orario di inizio di una lezione deve essere maggiore o
 uguale dell"orario corrente;
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Screen_MySQL.jpg
	lyxscale 50
	scale 90

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Vista 
\begin_inset Quotes eld
\end_inset

catalogolezione
\begin_inset Quotes erd
\end_inset

 (MySQL)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
la procedura "updateCond" permette di aggiornare una fascia oraria di una
 lezione e la data di una lezione effettuando un controllo sulla nuova fascia
 oraria rispetto alla precedente evitando che si incrocino;
\end_layout

\begin_layout Itemize
la procedura "inserisciVideoCall" inserisce una nuova room con un id di
 fascia oraria e un token docente generato in modo randomico;
\end_layout

\begin_layout Itemize
la procedura "inserisciCond" permette di inserire una nuova fascia oraria
 ad una lezione creata evitando che il docente inserisca una fascia oraria
 che si incrocia con una già creata;
\end_layout

\begin_layout Itemize
la procedura "genTokens" crea un token in modo randomico per ogni prenotazione
 per ogni studente pagante per una fascia oraria.
\end_layout

\begin_layout Section
Implementazione Client ed Esecuzione
\end_layout

\begin_layout Standard
Per l'esecuzione dell'applicazione web è necessario collegarsi all'indirizzo:
 
\family typewriter
https://webappsmartlearning.azurewebsites.net
\end_layout

\begin_layout Standard
Per l'interfacciamento con il client si sono sviluppate diverse pagine html,
 in particolare:
\end_layout

\begin_layout Itemize
indexSmartLearning.html: pagina di login;
\end_layout

\begin_layout Itemize
RegistrationPage.html: pagina di registrazione;
\end_layout

\begin_layout Itemize
Homepage.html: homepage (ricerca lezioni); 
\end_layout

\begin_layout Itemize
ProfiloPage.html: pagina del profilo, contenente informazioni sull'utente,
 le lezioni alle quali è prenotato, le proprie lezioni in caso di Docente.
 Su questa pagina è inoltre possibile effettuare le videocall.
\end_layout

\begin_layout Standard
Inoltre si è deciso di utilizzare diversi file css per la visualizzazione
 degli elementi.
 In particolare, per tutte le pagine elencate si utilizzeranno i css della
 libreria 
\begin_inset Quotes eld
\end_inset

bootstrap
\begin_inset Quotes erd
\end_inset

 così come il file 
\begin_inset Quotes eld
\end_inset

demo.css
\begin_inset Quotes erd
\end_inset

, appositamente sviluppato.
 L'ultimo css utilizzato è 
\begin_inset Quotes eld
\end_inset

index.css
\begin_inset Quotes erd
\end_inset

, utile ad una corretta visualizzazione della interfaccia di videochiamata.
\end_layout

\begin_layout Standard
Oltre ai file html e css, lato client risiederanno anche degli script Javascript
, embedded nelle pagine oppure in file separati.
 Si è deciso di lasciare gli script embedded nelle pagine laddove le funzioni
 sono specifiche e non riusabili per altre pagine.
 Tuttavia è possibile trovare 3 file Javascript:
\end_layout

\begin_layout Itemize
janus.js: libreria fornita da janus per l'interfacciamento clientside verso
 il server Janus;
\end_layout

\begin_layout Itemize
mainpage.js: file contenente script che utilizzano funzioni contenute in
 janus.js ed eseguono l'effettiva creazione degli handler e l'esecuzione
 delle operazioni per l'interazione con il server Janus e la trasmissione/ricezi
one dei flussi multimediali;
\end_layout

\begin_layout Itemize
jsSmartLearning.js: contiene tutte e sole le funzioni che vengono utilizzate
 da più pagine.
\end_layout

\begin_layout Standard
In seguito si spiegheranno, con l'ausilio di alcuni diagrammi, i principali
 flussi di esecuzione sviluppati.
\end_layout

\begin_layout Subsubsection*
Login e Registrazione
\end_layout

\begin_layout Standard
La prima pagina che verrà visualizzata nel caso in cui non si sia effettuato
 il login è 
\begin_inset Quotes eld
\end_inset

indexSmartLearning.html
\begin_inset Quotes erd
\end_inset

.
 Come si può notare dalla figura sottostante, tale pagina consente di effettuare
 l'accesso all'applicazione se si possiedano già le credenziali.
 In caso di esito positivo, verrà caricata 
\begin_inset Quotes eld
\end_inset

Homepage.html
\begin_inset Quotes erd
\end_inset

, ovvero la pagina principale dell'applicazione, dove sarà possibile effettuare
 la ricerca delle lezioni.
 Se invece non si possiedono delle credenziali, tramite il testo 
\begin_inset Quotes eld
\end_inset

registrati ora
\begin_inset Quotes erd
\end_inset

 sarà possibile caricare la pagina 
\begin_inset Quotes eld
\end_inset

RegistrationPage.html
\begin_inset Quotes erd
\end_inset

 che mostra un form attraverso il quale è possibile effettuare la creazione
 di un account, inoltre sono stati implementati gli opportuni controlli
 sui dati che si immettono.
 Dopo aver effettuato la procedura, ogni utente sarà registrato in qualità
 di studente e solo in un secondo momento, avrà la possibilità di effettuare
 l'upgrade ad un account docente.
 In caso di registrazione effettuata correttamente l'utente verrà reindirizzato
 alla pagina di login.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/login_registrazione.png
	lyxscale 40
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Mockup Login - Registrazione
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Interfacce Studente
\end_layout

\begin_layout Standard
Effettuato correttamente il login, un utente si ritroverà nella homepage.
 Con riferimento alla figura sottostante, si fa notare che dalla homepage
 è possibile effettuare la ricerca di una lezione secondo due criteri:
\end_layout

\begin_layout Itemize
Il cognome del docente
\end_layout

\begin_layout Itemize
Il topic della lezione
\end_layout

\begin_layout Standard
Digitando un qualsiasi valore all'interno della barra di ricerca, questo
 verrà confrontato dapprima con i cognomi dei docenti presenti nel DB e,
 in caso di riscontro positivo, verranno visualizzate tutte le lezioni create
 dal docente, con relative programmazioni.
 Viceversa, se non vi è un riscontro positivo con un docente, il valore
 verrà confrontato con i topic, restituendo tutte le lezioni relative al
 topic digitato.
 In caso di esito negativo della ricerca, verrà mostrato un alert.
\end_layout

\begin_layout Standard
Se la ricerca ha prodotto almeno un risultato, cliccando su 
\begin_inset Quotes eld
\end_inset

prenota ora
\begin_inset Quotes erd
\end_inset

 è possibile vedere tutte le programmazioni di una lezione e prenotarsi.
\end_layout

\begin_layout Standard
Cliccando, invece, su 
\begin_inset Quotes eld
\end_inset

Profilo
\begin_inset Quotes erd
\end_inset

 nella barra di navigazione principale è possibile raggiungere la pagina
 
\begin_inset Quotes eld
\end_inset

ProfiloPage.html
\begin_inset Quotes erd
\end_inset

, la quale racchiude la maggior parte delle funzionalità fin ora sviluppate.
 In questa pagina si avrà a disposizione un'ulteriore barra di navigazione
 verticale, tramite la quale è possibile accedere a diverse informazioni:
\end_layout

\begin_layout Itemize
Al caricamento della pagina verrà mostrato il tab 
\begin_inset Quotes eld
\end_inset

utente
\begin_inset Quotes erd
\end_inset

, dove è possibile reperire tutte le informazioni relative all'utente loggato.
\end_layout

\begin_layout Itemize
Il tab 
\begin_inset Quotes eld
\end_inset

Lezioni Sottoscritte
\begin_inset Quotes erd
\end_inset

, il quale permette di vedere tutte le informazioni relative alle lezioni
 prenotate.
 Successivamente, cliccando su 
\begin_inset Quotes eld
\end_inset

vedi programmazioni
\begin_inset Quotes erd
\end_inset

 è possibile vedere nello specifico tutte le prenotazioni per una lezione
 e, se la lezione è stata avviata, prendere parte alla videochiamata cliccando
 su 
\begin_inset Quotes eld
\end_inset

partecipa
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Itemize
Mentre il tab 
\begin_inset Quotes eld
\end_inset

Lezioni mie
\begin_inset Quotes erd
\end_inset

 riguarda funzionalità del docente, approfondite nel paragrafo successivo.
\end_layout

\begin_layout Standard
Tornando alla barra principale, se è stato effettuato il login con un account
 Studente, sarà presente un tasto 
\begin_inset Quotes eld
\end_inset

Upgrade Docente
\begin_inset Quotes erd
\end_inset

, attraverso il quale è possibile raggiungere la pagina 
\begin_inset Quotes eld
\end_inset

upgrade.html
\begin_inset Quotes erd
\end_inset

.
 Qui sarà presentato un form all'interno del quale è possibile inserire
 email dell'account paypal e il proprio CV.
 Queste informazioni sono necessarie per creare un account di tipo Docente.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Studente.png
	lyxscale 40
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Mockup Studente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Interfacce Docente
\end_layout

\begin_layout Standard
L'account docente è una estensione dell'account Studente e per questo motivo
 include tutte le funzionalità precedentemente illustrate.
\end_layout

\begin_layout Standard
Tuttavia il docente avrà accesso alle funzionalità del tab 
\begin_inset Quotes eld
\end_inset

Lezioni mie
\begin_inset Quotes erd
\end_inset

 nella pagina 
\begin_inset Quotes eld
\end_inset

ProfiloPage.html
\begin_inset Quotes erd
\end_inset

.
 Qui è possibile vedere tutte le proprie lezioni create con relative programmazi
oni, così come creare nuove lezioni e programmazioni.
 Con riferimento alla figura sottostante è possibile vedere il form da compilare
 per la creazione di una nuova lezione, così come quello per la creazione
 di una nuova programmazione.
 Dalla visualizzazione delle programmazioni, in caso ci si trovi nell'orario
 relativo ad una di queste, verrà visualizzato il bottone 
\begin_inset Quotes eld
\end_inset

avvia videochiamata
\begin_inset Quotes erd
\end_inset

 che consente la creazione e l'accesso alla room relativa alla lezione.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/docente.png
	lyxscale 40
	scale 30

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Mockup Docente
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Configurazione
\end_layout

\begin_layout Standard
Per eseguire l'applicazione è necessario un web browser, nei successivi
 esempi è stato adoperato Google Chrome (consigliato).
\end_layout

\begin_layout Standard
Per una corretta esecuzione, in particolare delle funzionalità relative
 a Janus, è necessario effettuare la seguente procedura:
\end_layout

\begin_layout Enumerate
Digitare la seguente stringa all'interno della barra degli indirizzi:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
chrome://flags/#unsafely-treat-insecure-origin-as-secure
\end_layout

\end_deeper
\begin_layout Enumerate
Inserire il seguente URL all'interno dell'opzione denominata 
\begin_inset Quotes eld
\end_inset


\series bold
Insecure origins treated as secure
\series default

\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
http://20.49.195.171:8088
\end_layout

\end_deeper
\begin_layout Enumerate
Selezionare 
\begin_inset Quotes eld
\end_inset

Enabled
\begin_inset Quotes erd
\end_inset

 dal menù corrispondente;
\end_layout

\begin_layout Enumerate
Riavviare il browser mediante il comando 
\begin_inset Quotes eld
\end_inset

Relaunch Now
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
Infatti il server Janus è considerato come un'origine insicura, questa procedura
 permetterà di trattarlo come sicuro ed eseguire la funzionalità di videochiamat
a.
\end_layout

\begin_layout Standard
Il procedimento è mostrato nella seguente figura:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/Configurazione_Chrome.png
	lyxscale 40
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Configurazione Google Chrome
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
