#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{listings,xcolor,courier,bookmark}
\usepackage{listingsutf8}
\usepackage{lmodern}
\definecolor{darkblue}{named}{blue}
\definecolor{darkred}{named}{red}
\definecolor{grau}{named}{gray}
\let\Righttorque\relax
\lstset{
captionpos=b,
commentstyle=\color[rgb]{0.133,0.545,0.133},
keywordstyle=\color{darkblue},
stringstyle=\color{darkred},
extendedchars=true,
basicstyle=\small\ttfamily,
showstringspaces=false,
tabsize=2,
numbers=left,
numberstyle=\tiny,
breakautoindent  = true,
breakindent      = 2em,
breaklines       = true,
postbreak        = ,
prebreak         = \raisebox{-.8ex}[0ex][0ex]{\Righttorque},
showspaces=false, 
showtabs=false, 
showstringspaces=false,
language=VHDL,
frame=single,
morecomment=[s]{--}
}


\renewcommand*{\lstlistingname}{Codice Componente}


\usepackage{fancyhdr}
\pagestyle{fancy}

\fancyhead{} 
\fancyfoot{} 

\fancyhead[RO,LE]{\bfseries \leftmark}
\fancyfoot[LE,RO]{\thepage}
\fancyfoot[LO,CE]{Tesina in ASE: Architetture dei Sistemi di Elaborazione}
\renewcommand{\headrulewidth}{0.4pt}
\renewcommand{\footrulewidth}{0.4pt}

\date{}
\cfoot{}
\end_preamble
\use_default_options true
\master Tesina.lyx
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2.5cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Possibili soluzioni ed entità in gioco
\end_layout

\begin_layout Standard
Le funzionalità dell'applicazione Smart Learning, raccolte e definite nella
 specifica dei requisiti, è possibile raggrupparle nei seguenti moduli.
\end_layout

\begin_layout Standard
- un modulo Lezione che ha la responsabilità della gestione della lezione
 e del suo calendario
\end_layout

\begin_layout Standard
- un modulo Recensione che ha la responsabilità di gestire le Recensioni
 delle Lezioni da parte degli utenti.
\end_layout

\begin_layout Standard
- un modulo Utente che ha la responsbailità di gestire tuttò ciò che riguarda
 informazioni del profilo Utente e di quello Docente
\end_layout

\begin_layout Standard
- un modulo Pagamento che ha la responsbailità di gestire i pagamenti e
 di tenere traccia delle persone che hanno pagato una lezione
\end_layout

\begin_layout Standard
- un modulo Topic che ha la responsabilità di permettere agli utenti dell'applic
azione di espremere una preferenza riguardo a particolari argomenti di lezioni
 e dualmente di permettere ai docenti di conoscere quali sono gli argomenti
 preferiti dagli utenti
\end_layout

\begin_layout Standard
- un modulo VideoCall che ha la responsabilità di offrire ai docenti di
 avviare la videochiamata e agli alunni che hanno pagato di partecipare.
\end_layout

\begin_layout Standard
Sono state prese in considerazione due possibile soluzioni architetturali:
 architettura a microservizi e architettura multilayer con servizi esterni.
\end_layout

\begin_layout Standard
L'architettura a microservizi sembra adattarsi perfettamente sia per la
 numerosità dei moduli e servizi che presenta l' applicazione Smart Learning
 e sia perchè attribuirebbe al software flessibilità ed estensibilità (apertura
 a nuovi servizi) necessari ad un'applicazione sviluppata ex-novo.
\end_layout

\begin_layout Standard
Purtroppo dopo aver effettuato un'attenta analisi di fattibilità si è constatato
 che non si sarebbero potuti rispettare i vincoli temporali di consegna
 del progetto a causa dell'ardua e sofisticata implementazione che avrebbe
 richiesto ogni microservizio.
\end_layout

\begin_layout Standard
Per tale motivo si è optato verso una soluzione più semplice (multilayer
 con servizi esterni) ma tenendo bene a mente che in futuro vi possa essere
 un passaggio ad architettura a microservizi.
\end_layout

\begin_layout Section
Architettura multilayer con servizi esterni
\end_layout

\begin_layout Section
Data Layer
\end_layout

\begin_layout Standard
Il layer DAO (Data access objects) è uno strato demandato completamente
 a gestire la comunicazione fra l'applicazione ed il DBMS relazionale.
\end_layout

\begin_layout Standard
Il Data Layer offre un'interfaccia (API) per disaccoppiare l'applicazione,
 quindi la logica di business, dall'implementazione dell'interfacciamento
 con la base di dati persistente.
\end_layout

\begin_layout Standard
Ciò garantisce all'architettura di essere flessibile ad eventuali cambiamenti
 che riguardano la base di dati persistente.
\end_layout

\begin_layout Standard
Inoltre l'API del Data layer è stata progettata in modo opportuno cercando
 di renderla quanto più flessibile e riutilizzabile tenendo a mente una
 possibile estensione ad architettura a microservizi.
\end_layout

\begin_layout Standard
A tal proposito si è scelto di strutturare il data layer in moduli indipendenti
 che rispecchiassero i possibili moduli DAO di un'architettura a microservizi.
 
\end_layout

\begin_layout Standard
Questi moduli nell' architettura attuale hanno in comune la dipendenza dal
 modulo DBDataConnector per l'interfacciamento con il DBMS.
\end_layout

\begin_layout Subsection
Moduli del Data Layer ed API
\end_layout

\end_body
\end_document
